apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-cfg
  namespace: backend
data:
  envoy.yaml: |-
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address: { address: 0.0.0.0, port_value: 80 }
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match: { prefix: "/" }
                    route: { host_rewrite: backend-app, cluster: backend-app_cluster }
              http_filters:              
              - name: envoy.filters.http.jwt_authn
                typed_config: 
                  "@type": type.googleapis.com/envoy.config.filter.http.jwt_authn.v2alpha.JwtAuthentication
                  providers:
                    provider_jwt-example:
                      issuer: jwt-example@your_gcp_project.iam.gserviceaccount.com
                      audiences:
                      - jwt-example.backend-app
                      remote_jwks:
                        http_uri:
                          uri: https://www.googleapis.com/service_accounts/v1/jwk/jwt-example@your_gcp_project.iam.gserviceaccount.com
                          cluster: provider_cluster
                          timeout:
                            seconds: 5
                        cache_duration:
                          seconds: 300
                  rules:
                  - match: { prefix: / }
                    requires: { provider_name: provider_jwt-example }
              - name: envoy.filters.http.router
      clusters:
      - name: backend-app_cluster
        connect_timeout: 0.25s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: LEAST_REQUEST
        load_assignment:
          cluster_name: backend-app_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: backend-app
                    port_value: 8080
      - name: provider_cluster
        connect_timeout: 0.25s
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: LEAST_REQUEST
        load_assignment:
          cluster_name: provider_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: googleapis.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt
---
apiVersion: v1
kind: Service
metadata:
  name: backend-envoy
  namespace: backend
  labels:
    name: backend-envoy
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  selector:
    name: backend-envoy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-envoy
  namespace: backend
  labels:
    name: backend-envoy
spec:
  selector:
    matchLabels:
      name: backend-envoy
  template:
    metadata:
      labels:
        name: backend-envoy
    spec:
      volumes:
      - name: envoy-cfg
        configMap:
          name: envoy-cfg
      containers:
      - name: backend-envoy
        image: envoyproxy/envoy:v1.14.1
        imagePullPolicy: Always
        # command: ["/usr/local/bin/envoy"]
        # args: ["--config-path /etc/envoy/envoy.yaml",  "--log-level debug"]
        ports:
        - name: http
          containerPort: 80
        - name: envoy-admin
          containerPort: 9901
        volumeMounts:
        - mountPath: /etc/envoy
          readOnly: true
          name: envoy-cfg